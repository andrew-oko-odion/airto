
<style type="text/css">
 .fixed.text.menu {
     margin-top: 0px;
     padding-top: 1.0em;
     padding-bottom: 3.0em;
 }
</style>

<script>
 let service = () => {
     $('.ui.tiny.modal.rental')
	 .modal('setting', 'closable', false)
	 .modal('show')
     ;
 }
 let rental = () => {
     $('.ui.tiny.modal.service')
	 .modal('setting', 'closable', false)
	 .modal('show')
     ;
 }
 let login = () => {
     $('.ui.tiny.modal.login')
	 .modal('setting', 'closable', false)
	 .modal('show')
     ;
 }
 let signup = () => {
     $('.ui.tiny.modal.signup')
     	 .modal('setting', 'closable', false)
	 .modal('show')
     ;
 }

 let  isLogin = () => {
     if ( sessionStorage.getItem("userID") ) {
	 console.log(sessionStorage.getItem("userEmail"));
	 console.log(sessionStorage.getItem("userID"));
	 console.log(sessionStorage.getItem("userAuth"));
	 console.log('User is login');
	 return true;
     }
     console.log('Error user not login yet');
     return false;
 }

 let signOut = () => {
     console.log('Logout button Clicked');
     if ( isLogin() == true ) {
	 const logoutUrl = '/users/sign_out.json'
	 fetch(logoutUrl, {
	     method: 'DELETE',
	     headers: {
		 'Accept': 'application/json',
		 'Content-Type': 'application/json',
		 'X-User-Token': sessionStorage.getItem("userAuth"),
		 'X-User-Email': sessionStorage.getItem("userEmail")
	     }
	 });

	 sessionStorage.setItem("userEmail","");
	 sessionStorage.setItem("userAuth","");
	 sessionStorage.setItem("userID","");
     }
 }

 
 let handleLogin = () => {
     let email = $('.loginform #email').val();
     let password = $('.loginform #password').val();
     
     console.log('Form submited');
    
     const loginUrl = '/users/sign_in.json'
     fetch(loginUrl, {
	 method: 'POST',
	 headers: {
             'Accept': 'application/json',
             'Content-Type': 'application/json',
	 },
	 body: JSON.stringify(
	     { "user": {
		 email: email,
		 password: password
	     }
	     })
     }).then((response) => {	     
	 response.json().then(function(data) {
	     sessionStorage.userEmail = data.email;
	     sessionStorage.userAuth =  data.authentication_token;
	     sessionStorage.userID = data.id;
             console.log(data);
	     console.log(sessionStorage.getItem("userEmail"));
	 }); 
     })
       .catch((error)  => {
	   console.log('Request failure: ', error);
       }
       );
 }


 /* let handleChekBox = () => {
  *     $('.ui.checkbox')
    .checkbox();
  * }*/ 
</script>

<div class="ui stackable grid container">
    <div class="ui stackable text menu "id="header">
	<div class="ui container">
	    <a class="item" href="#">
		<div class="ui segment">
		    <i class="big yahoo icon" style="color: #fd5c63"> </i>
		</div>
	    </a>	
	    <a class="right item" href="#">
		Rentals
	    </a>
	    <a class="item" href="#">
		Services 
	    </a>
	    <div class="ui top pointing dropdown item">
		Enlist
		<i class="large angle down icon"></i>
		<div class="menu">
		    <a class="item" onClick="rental()">List a rental for event</a>
		    <div class="ui divider" style="margin: 0em"> </div>
		    <a class="item" onClick="service()">List a service for event</a>
		</div>
	    </div>
	    <a class="item" href="#" onClick='signup()' id="navSignup" >
		Sign up
	    </a>
	    <a class="item" href="#" onClick='login()' id="navLogin">
		Login
	    </a>
	    <a class="item" href="#" onClick='signOut()' id="navLogout" style="display: none">
		Logout
	    </a>
	</div>
    </div>
</div>

<br />
<br />
<br />

<%= render 'layouts/list_rental' %>
<%= render 'layouts/list_service' %>
<%= render 'layouts/login' %>
<%= render 'layouts/signup' %>

<script>

 $('.ui.checkbox')
     .checkbox();
 
 $('.ui.search')
     .search({
	 apiSettings: {
	     url: '//localhost:3000/jobs/autocomplete.json?query={query}'
	 },
	 fields: {
	     results : 'items',
	     title   : 'title',
	     url     : 'url'
	 },
	 minCharacters : 1,
	 debug: true
     })
 ;
 
 $('.dropdown')
     .dropdown()
 ;



 $('.ui.form.loginform').form({
     inline : true,
     fields: {
         email: {
             identifier: 'email',
             rules: [{
                 type: 'empty',
                 prompt: 'Please enter a value'
             }]
         },
	 password: {
             identifier: 'password',
             rules: [
		 {
		     type   : 'empty',
		     prompt : 'Please enter a password'
		 },
		 {
		     type   : 'minLength[6]',
		     prompt : 'Your password must be at least {ruleValue} characters'
		 }
             ]
	 }
     }
 });


 if ( isLogin() == true ){
     $('#navLogin').hide();
     $('#navSignup').hide();
     $('#navLogout').show();
 }

 
</script>
